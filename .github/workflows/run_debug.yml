name: "Build android"
on:
  push:
    branches:
      - develop
      - "release/**"
  pull_request:
    branches:
      - develop
      - master
jobs:
  build_apk:
    name: Build Flutter (Android)

    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
      # - uses: dart-lang/setup-dart@v1.3

      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          channel: "stable" # or: 'beta', 'dev' or 'master'

      - run: flutter doctor -v
      - run: flutter pub get
      - run: flutter analyze
      - run: flutter build apk --release --dart-define IS_DEBUG=true --dart-define IS_PROD=true --dart-define BASE_URL=https://api3.nd.aventus.work/ --dart-define APP_DB_PASSWORD=123 --dart-define API_KEY_DADATA=8dfe375e50181b3f1e7d0dfd1070f1559d73d2c5"

      - uses: actions/upload-artifact@v1
        with:
          name: app-release
          path: build/app/outputs/apk/release/app-release.apk

      - uses: actions/download-artifact@master
        with:
          name: app-release
      - name: Upload APK
        uses: wzieba/Firebase-Distribution-Github-Action@v1
        with:
          appId: ${{secrets.FIREBASE_ANDROID_APPID}}
          token: ${{secrets.FIREBASE_TOKEN}}
          groups: testers
          file: app-release.apk
          releaseNotes: "${{ github.event.head_commit.author.name }}: ${{ github.event.head_commit.message }}"

  # beta_apk:
  #   name: Upload Android Beta to Firebase App Distribution
  #   needs: [build_apk]
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@v1
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 14
  #     - name: set up JDK 1.8
  #       uses: actions/setup-java@v2
  #       with:
  #         distribution: "zulu"
  #         java-version: "17" #defines the java version
  #     - name: Download Artifact
  #       uses: actions/download-artifact@master
  #       with:
  #         name: release-apk
  #     - name: Upload APK
  #       uses: wzieba/Firebase-Distribution-Github-Action@master
  #       with:
  #         appId: ${{secrets.FIREBASE_ANDROID_APPID}}
  #         token: ${{secrets.FIREBASE_TOKEN}}
  #         groups: testers
  #         file: app-release.apk
  #         releaseNotes: "привет ${{ github.event.head_commit.author.name }}: ${{ github.event.head_commit.message }}"
#           file: /github/workspace/build/app/outputs/flutter-apk/app-release.apk

# Error: File build/app/outputs/flutter-apk/app-release.apk does not exist: verify that file points to a binary
# Error: File /github/workspace/build/app/outputs/apk/release/app-release.apk does not exist: verify that file points to a binary

# fatal: not a git repository (or any parent up to mount point /github)
# Stopping at filesystem boundary (GIT_DISCOVERY_ACROSS_FILESYSTEM not set).
# Error: File /github/workspace/build/app/outputs/apk/release/app-release.apk does not exist: verify that file points to a binary

# on:
#   push:
#     branches:
#       - main
# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       - uses: actions/checkout@v3

#       - name: Set up Flutter
#         uses: subosito/flutter-action@v2
#         with:
#           channel: "stable"

#       - name: Install Dependencies
#         run: flutter packages get

#       - name: Decode Keystore
#         id: write_file
#         uses: timheuer/base64-to-file@v1
#         with:
#           fileName: "key.jks"
#           encodedString: ${{ secrets.KEYSTORE }}

#       - name: Build
#         run: flutter build apk
#         env:
#           ANDROID_KEYSTORE_PATH: ${{ steps.write_file.outputs.filePath }}
#           ANDROID_KEYSTORE_ALIAS: ${{ secrets.ANDROID_KEYSTORE_ALIAS }}
#           ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PRIVATE_KEY_PASSWORD }}
#           ANDROID_KEYSTORE_PASSWORD: ${{ secrets.ANDROID_KEYSTORE_PASSWORD }}

#       - name: Firebase App Distribution
#         uses: wzieba/Firebase-Distribution-Github-Action@v1
#         with:
#           appId: ${{secrets.FIREBASE_APP_ID}}
#           serviceCredentialsFileContent: ${{ secrets.CREDENTIAL_FILE_CONTENT }}
#           groups: testers
#           file: /github/workspace/build/app/outputs/flutter-apk/app-release.apk
